<?php
/**
 * Base Class for all Validators. Each Validator should EXTEND this class!
 * 
 *
 */ 
abstract class Validator {
	protected $message;
	
	public function __construct() {
	}

	// returns true when OK, false when not OK.
	abstract public function check($value);
	
	// returns the error message that was generated by the check- Method.
	public function errorMessage() {
		return $this->message;
	}
}
/**
 * @copyright (c) 2013, Wornik Hans <hans@wornik.eu>
 *
 * @license This Software is licensed under the Open Public License
 * @license http://fedoraproject.org/wiki/Licensing/Open_Public_License
 * 
 * Dieser Controler steuert alle Aktionen bis ein User angemeldet ist
 */
class Validator_Date extends Validator{

	public function check($value) {
            
		if (!preg_match('/(\d{2})\.(\d{2})\.(\d{4})/',$value)) {
			$this->message = '\''.$value.'\' is not a date';
			return false;
		}
		else {
			$this->message = $value." OK";
			return true;
		}
	}
}

class Validator_Number extends Validator {

	public function check($value) {
		if (!is_numeric($value)) {
			$this->message = '\''.$value.' is not a number';
			return false;
		}
		else {
			$this->message = $value." OK";
			return true;
		}
	}
}

class Validator_Name extends Validator{

    public function check($value) {

            if (!(preg_match('/^[a-zöüäÖÜÄ]+[-]?[a-zöäüÖÜÄ]*$/i', $value)==1)){
                    $this->message = '\''.$value.'\' is not a Name';
                    return false;
            }
            else {
                    $this->message = $value." OK";
                    return true;
            }
    }

}

class Validator_String  extends Validator {

	public function check($value) {
            
   		if (!is_string($value)) {
			$this->message =  '\''.$value.'\' is not a string';
			return false;
		}
		else {
                    if(strlen($value)>0)
                    {
			$this->message =  $value." OK";
			return true;
                    }  
                    else 
                    {
                        $this->message =  '\''.$value.'\' is not a string';
			return false;
                    }
		}
	}

//put your code here
}

class Validator_Email extends Validator{

	public function check($value) {

		if (!preg_match('/(.)+@(.)+\.(.)+/',$value)) {
			$this->message = '\''.$value.'\' is not a email';
			return false;
		}
		else {
			$this->message = $value." OK";
			return true;
		}
	}
}

class Validator_Hex extends Validator{
    public function check($value) {
        if(!preg_match('/[abcdef0-9]+/'))
        {
                    $this->message = '\''.$value.'\' is not a Hex';
                    return false;
        }
        else 
        {
                    $this->message = 'OK';
                    return true;
        }
    }

//put your code here
}